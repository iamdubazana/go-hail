spring.application.name=auth-service

server.port=5000
server.address=0.0.0.0

spring.datasource.url=jdbc:h2:file:./data/user
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# Optional: keep H2 console enabled
spring.h2.console.enabled=true

# Schema update strategy
spring.jpa.hibernate.ddl-auto=update

# JWT configuration
jwt.secret=SuperLongSecretKeyForJwtAuthbecosal;kjl;adfjaiodfjhopaiokdsfjpaoidjfijadsfjaodsjifoasdjnkasduiuh123456
jwt.expiration=86400000





# # Service name and server configuration
# spring.application.name=auth-service
# server.port=${SERVER_PORT:5000}          # Default 5000 if env not set
# server.address=0.0.0.0

# # PostgreSQL datasource using environment variables
# spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:authdb}
# spring.datasource.username=${DB_USERNAME:auth_user}
# spring.datasource.password=${DB_PASSWORD:securePassword123}
# spring.datasource.driver-class-name=org.postgresql.Driver

# # JPA / Hibernate settings
# spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
# spring.jpa.hibernate.ddl-auto=validate          # Validate schema only
# spring.jpa.show-sql=false                       # Optional: true for debugging
# spring.jpa.properties.hibernate.format_sql=true

# # Optional: management endpoints
# management.endpoints.web.exposure.include=health,info

# # H2 console disabled in production
# spring.h2.console.enabled=false

# jwt.secret=SuperSecretKeyForJwtAuth
# jwt.expiration=86400000